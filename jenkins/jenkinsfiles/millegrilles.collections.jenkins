pipeline {
    agent any

    stages {

        stage('client build') {
            steps {
                echo 'Build react'

                checkout scmGit(branches: [[name: '2024.0']], extensions: [], userRemoteConfigs: [[credentialsId: '1720dd83-55b4-4255-aa54-754fe09a4408', url: 'ssh://git.maple.maceroc.com/git/millegrilles.collections']])

                sh '''
                # Creer manifest
                #export VBRANCH="$(echo ${GIT_BRANCH} | awk -F/ '{print $2}')"
                export VBRANCH=2024.0
                export VERSION="${VBRANCH}.${BUILD_NUMBER}"
                export DATECOURANTE=`date "+%Y-%m-%d %H:%M"`
                export PATH_MANIFEST=client/src/manifest.build.js

                echo "const build = {" > $PATH_MANIFEST
                echo "  date: '$DATECOURANTE'," >> $PATH_MANIFEST
                echo "  version: '$VERSION'" >> $PATH_MANIFEST
                echo "}" >> $PATH_MANIFEST
                echo "module.exports = build;" >> $PATH_MANIFEST

                echo "Manifest $PATH_MANIFEST"
                cat $PATH_MANIFEST
                '''

                sh '''export NODE_OPTIONS=--openssl-legacy-provider
                export NVM_CD_FLAGS=
                export NVM_DIR=/var/lib/jenkins/.nvm
                export NVM_VERSION=$NVM_DIR/versions/node/v20.10.0
                export NVM_INC=$NVM_VERSION/include/node
                export NVM_BIN=$NVM_VERSION/bin
                export PATH=$NVM_BIN:$PATH
                export CI=false

                cd client

                echo "Env ---"
                printenv
                echo "---"

                npm i
                npm run build
                tar -zcf millegrilles.collections.tar.gz build/
                '''

                stash includes: 'client/millegrilles.collections.tar.gz', name: 'react_artifact'
            }
        }

        stage('docker build') {
            parallel {
                stage('docker build x86_64') {
                    agent { label 'x86_64' }
                    steps {
                        checkout scmGit(branches: [[name: '2024.0']], extensions: [], userRemoteConfigs: [[credentialsId: '1720dd83-55b4-4255-aa54-754fe09a4408', url: 'ssh://git.maple.maceroc.com/git/millegrilles.collections']])
                        unstash 'react_artifact'

                        sh '''
                        # Preparer artifacts web static
                        rm -r build/ || true
                        rm -r static/ || true
                        tar -zxf client/millegrilles.collections.tar.gz
                        mkdir -p static/collections
                        mv build/* static/collections

                        # Compresser tous les fichiers ressources en gzip (et conserver l\'original)
                        FICHIERS_GZ=`find static/collections -type f \\( -name "*.js" -o -name "*.css" -o -name "*.map" -o -name "*.json" \\)`
                        # for FICHIER in "${FICHIERS_GZ[@]}"; do gzip -k "$FICHIER"; done
                        '''

                        sh '''
                        # Creer image docker
                        #VBRANCH="$(echo ${GIT_BRANCH} | awk -F/ '{print $2}')"
                        VBRANCH=2024.0
                        docker build -t docker.maple.maceroc.com:5000/millegrilles_collections:x86_64_${VBRANCH}.${BUILD_NUMBER} .
                        docker push docker.maple.maceroc.com:5000/millegrilles_collections:x86_64_${VBRANCH}.${BUILD_NUMBER}
                        '''
                    }
                }
                stage('docker build aarch64') {
                    agent { label 'aarch64' }
                    steps {
                        checkout scmGit(branches: [[name: '2024.0']], extensions: [], userRemoteConfigs: [[credentialsId: '1720dd83-55b4-4255-aa54-754fe09a4408', url: 'ssh://git.maple.maceroc.com/git/millegrilles.collections']])
                        unstash 'react_artifact'

                        sh '''
                        # Preparer artifacts web static
                        rm -r build/ || true
                        rm -r static/ || true
                        tar -zxf client/millegrilles.collections.tar.gz
                        mkdir -p static/collections
                        mv build/* static/collections

                        # Compresser tous les fichiers ressources en gzip (et conserver l\'original)
                        FICHIERS_GZ=`find static/collections -type f \\( -name "*.js" -o -name "*.css" -o -name "*.map" -o -name "*.json" \\)`
                        # for FICHIER in "${FICHIERS_GZ[@]}"; do gzip -k "$FICHIER"; done
                        '''

                        sh '''
                        # Creer image docker
                        #VBRANCH="$(echo ${GIT_BRANCH} | awk -F/ '{print $2}')"
                        VBRANCH=2024.0
                        docker build -t docker.maple.maceroc.com:5000/millegrilles_collections:aarch64_${VBRANCH}.${BUILD_NUMBER} .
                        docker push docker.maple.maceroc.com:5000/millegrilles_collections:aarch64_${VBRANCH}.${BUILD_NUMBER}
                        '''
                    }
                }
            }
        }

        stage('docker manifest') {
            steps {
                sh '''
                export DOCKER_CLI_EXPERIMENTAL=enabled
                rm -r ${JENKINS_HOME}/.docker/manifests/* || true
                #VBRANCH="$(echo ${GIT_BRANCH} | awk -F/ '{print $2}')"
                VBRANCH=2024.0
                LISTE_ARCH="docker.maple.maceroc.com:5000/millegrilles_collections:x86_64_${VBRANCH}.${BUILD_NUMBER} docker.maple.maceroc.com:5000/millegrilles_collections:aarch64_${VBRANCH}.${BUILD_NUMBER}"
                docker manifest create docker.maple.maceroc.com:5000/millegrilles_collections:${VBRANCH}.${BUILD_NUMBER} $LISTE_ARCH
                docker manifest push docker.maple.maceroc.com:5000/millegrilles_collections:${VBRANCH}.${BUILD_NUMBER}
                '''
            }
        }

    }
}
