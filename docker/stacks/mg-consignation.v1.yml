# Stack pour consignation de MilleGrilles

# Use root/example as user/password credentials
version: '3.7'

services:

  # Base de donnees MongoDB
  mongo:
    image: repository.maple.mdugre.info:5000/mg_mongo:1.0

    volumes:
      - mg-consignation-mongo:/data/db

    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 500M
      restart_policy:
        condition: any
        delay: 30s

    ports:
      - "27017:27017"

    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

    networks:
      - overlay

  # Systeme de messagerie RabbitMQ, incluant web manager
  rabbitmq:
    image: repository.maple.mdugre.info:5000/mg_rabbitmq:1.0

    hostname: rabbitmq

    volumes:
      - mg-consignation-rabbitmq:/var/lib/rabbitmq

    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.50"
          memory: 1G
      restart_policy:
        condition: any
        delay: 30s

    ports:
      - "15672:15672"
      - "5671-5672:5671-5672"

    networks:
      - overlay

  # Script Python de persistance des transactions
#  transactions:
#    image: repository.maple.mdugre.info:5000/mg_transactions:1.1
#
#    depends_on:
#        - mongo
#        - rabbitmq
#
#    deploy:
#      replicas: 1
#      resources:
#        limits:
#          cpus: "0.20"
#          memory: 50M
#      restart_policy:
#        condition: any
#        delay: 30s
#
#    environment:
#      MG_NOM_MILLEGRILLE: dev2
#      MG_MQ_HOST: rabbitmq
#      MG_MONGO_HOST: mongo
#
#    networks:
#      - overlay

  # Script Python pour orienter les transactions vers un processus
  orienteur:
    image: repository.maple.mdugre.info:5000/mg_transactions:1.1

    depends_on:
        - mongo
        - rabbitmq

    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.20"
          memory: 50M
      restart_policy:
        condition: any
        delay: 30s

    entrypoint: 
      - python3
      - millegrilles/processus/OrienteurTransaction.py

    environment:
      MG_NOM_MILLEGRILLE: dev2
      MG_MQ_HOST: rabbitmq
      MG_MONGO_HOST: mongo

    networks:
      - overlay

# Utilitaires pour gerer / debugger les services

  mongo-express:
    image: mongo-express
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.5"
          memory: 75M
      restart_policy:
        condition: any
        delay: 30s
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    networks:
      - overlay

volumes:
  mg-consignation-mongo:
    name: mg-consignation-mongo
  mg-consignation-rabbitmq:
    name: mg-consignation-rabbitmq

networks:
  overlay:

