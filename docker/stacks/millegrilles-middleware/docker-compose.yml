# Stack pour consignation de MilleGrilles, middleware (logiciels serveurs)
version: '3.7'

services:

  # Base de donnees MongoDB
  mongo:
    image: ${REGISTRY}/mg_mongo${MONGO_IMAGE_VERSION}
    command:
      --replSet rs0
      --sslMode requireSSL
      --sslPEMKeyFile /run/secrets/pki.millegrilles.ssl.key_cert
      --sslCAFile /run/secrets/pki.millegrilles.ssl.CAchain
    hostname: mongo.local
    volumes:
      - ${MONGODB_DATA_MAPPING}:/data/db
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.database == true
      resources:
        limits:
          cpus: "2.0"
          memory: 1.0G
      restart_policy:
        condition: any
        delay: 30s
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo.root.password
    networks:
      - mg_net
    secrets:
      - mongo.root.password
      - pki.millegrilles.ssl.key_cert
      - pki.millegrilles.ssl.CAchain

  # Systeme de messagerie RabbitMQ, incluant web manager
  mq:
    image: ${REGISTRY}/mg_rabbitmq${MQ_IMAGE_VERSION}
    hostname: mq.local
    volumes:
      - mg-middleware-rabbitmq-data:/var/lib/rabbitmq
      - ${MQ_CONF_MAPPING}:/opt/rabbitmq/conf
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.mq == true
      resources:
        limits:
          cpus: "1.00"
          memory: 600M
      restart_policy:
        condition: any
        delay: 30s
    ports:
      - target: 443
        published: 8443
        protocol: tcp
        mode: host
      - target: 5671
        published: 5671
        protocol: tcp
        mode: host
      - target: 5673
        published: 5673
        protocol: tcp
        mode: host
    networks:
      - mg_net
    secrets:
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.CAchain
      - pki.millegrilles.wadmin.cert
      - pki.millegrilles.wadmin.key
      # - pki.millegrilles.web.cert
      # - pki.millegrilles.web.key

  # Web local avec nginx
  # Si la meme node docker est private et public, seul le service public
  # sera deploye.
  nginxlocal:
    image: ${REGISTRY}/mg_nginx${NGINX_IMAGE_VERSION}
    hostname: www-${URL_DOMAIN}.local
    volumes:
      # - ${NGINX_CONF_PATH}:/opt/nginx/dist/sites-available
      - ${NGINX_WWW_PATH}:/usr/share/nginx/html
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.millegrilles.nginx == true
          - node.labels.netzone.public != true
          - node.labels.netzone.private == true
      resources:
        limits:
          cpus: "0.50"
          memory: 100M
      restart_policy:
        condition: any
        delay: 30s
    environment:
     WEB_CERT: pki.millegrilles.ssl.fullchain
     WEB_KEY: pki.millegrilles.ssl.key
     NGINX_CONFIG_FILE: local.conf
     URL_DOMAIN: ${MG_NOM_MILLEGRILLE}.local
     NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - mg_net
    secrets:
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.fullchain

  # Utilitaires pour gerer / debugger les services
  web-mongo-express:
    image: ${REGISTRY}/mg_mongo_express${MONGO_EXPRESS_IMAGE_VERSION}
    hostname: mongoexpress.local
    depends_on:
        - mongo
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.consoles == true
      resources:
        limits:
          cpus: "0.5"
          memory: 75M
      restart_policy:
        condition: any
        delay: 30s
    ports:
      - target: 443
        published: 9443
        protocol: tcp
        mode: host
    environment:
      ME_CONFIG_BASICAUTH_USERNAME: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME}
# Environnement production
      MONGODB_ADMINPASSWORD_FILE: /run/secrets/mongo.root.password
      ME_CONFIG_BASICAUTH_PASSWORD_FILE: /run/secrets/mongoexpress.web.password
      VCAP_APP_HOST: '::'
      VCAP_APP_PORT: 443
      ME_CONFIG_SITE_SSL_ENABLED: 'true'
      ME_CONFIG_SITE_SSL_CRT_PATH: '/run/secrets/pki.millegrilles.wadmin.cert'
      ME_CONFIG_SITE_SSL_KEY_PATH: '/run/secrets/pki.millegrilles.wadmin.key'
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_SSL: 'true'
      ME_CONFIG_MONGODB_KEY: /run/secrets/pki.millegrilles.ssl.key
      ME_CONFIG_MONGODB_CERT: /run/secrets/pki.millegrilles.ssl.cert
      ME_CONFIG_MONGODB_CACERT: /run/secrets/pki.millegrilles.ssl.CAchain
      ME_CONFIG_MONGODB_SSLVALIDATE: 'true'
    networks:
      - mg_net
    secrets:
      - mongo.root.password
      - mongoexpress.web.password
      - pki.millegrilles.wadmin.cert
      - pki.millegrilles.wadmin.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.CAchain

  # Script Python de persistance des transactions
  transactions-python:
    image: ${REGISTRY}/millegrilles_consignation_python_main${MG_PYTHON_IMAGE_VERSION}
    # entrypoint: /bin/sleep 1000
    hostname: transactions-python.local
    command: demarrer_transaction.py
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.python == true
          - node.labels.millegrilles.database == true
      resources:
       limits:
          cpus: "0.50"
          memory: 100M
      restart_policy:
        condition: any
        delay: 30s
    env_file:
      - services-python.env
    environment:
      MG_NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
      MG_CONFIG_JSON: /run/secrets/mg.transactions.json
      MG_MONGO_USERNAME: ${MG_MONGO_USER_TRANSACTION}
    networks:
      - mg_net
    secrets:
      - mg.transactions.json
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.key_cert
      - pki.millegrilles.ssl.CAchain

  # Ceduleur Python qui transmet un message a toutes les minutes
  ceduleur-python:
    image: ${REGISTRY}/millegrilles_consignation_python_main${MG_PYTHON_IMAGE_VERSION}
    hostname: ceduleur-python.local
    command: demarrer_ceduleur.py
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.python == true
      resources:
       limits:
          cpus: "0.20"
          memory: 40M
      restart_policy:
        condition: any
        delay: 30s
    env_file:
      - services-python.env
    environment:
      MG_NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
      MG_CONFIG_JSON: /run/secrets/mg.ceduleur.json
      MG_MONGO_USERNAME: ${MG_MONGO_USER_CEDULE}
    networks:
      - mg_net
    secrets:
      - mg.ceduleur.json
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.CAchain
      - pki.millegrilles.ssl.key_cert

  # Script Python pour executer les domaines
  domaines-python:
    image: ${REGISTRY}/millegrilles_consignation_python_main${MG_PYTHON_IMAGE_VERSION}
    command: demarrer_domaine.py --info
    hostname: domaines-python.local
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.python == true
          - node.labels.millegrilles.domaines == true
      resources:
        limits:
          cpus: "1.00"
          memory: 100M
      restart_policy:
        condition: any
        delay: 30s
    env_file:
      - services-python.env
    environment:
      MG_NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
      MG_CONFIG_JSON: /run/secrets/mg.mgdomaines.json
      MG_MONGO_USERNAME: ${MG_MONGO_USER_DOMAINES}
      MG_DOMAINES_JSON: /opt/millegrilles/dist/domaines.json
    networks:
      - mg_net
    secrets:
      - mg.mgdomaines.json
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.key_cert
      - pki.millegrilles.ssl.CAchain

  # Application Meteor pour Coup D'Oeil
  coupdoeilreact:
    image:  ${REGISTRY}/coupdoeil_react${MG_COUPDOEILREACT_IMAGE_VERSION}
    hostname: coupdoeil.local
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.coupdoeil == true
      resources:
       limits:
          cpus: "1.00"
          memory: 200M
      restart_policy:
        condition: any
        delay: 30s
    ports:
      - target: 443
        published: 7443
        protocol: tcp
        mode: host
    env_file:
      - services-coupdoeil.env
    environment:
      MG_NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
      MG_MQ_URL: ${MG_MQ_PREFIX}/${MG_NOM_MILLEGRILLE}
    networks:
      - mg_net
    secrets:
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.CAchain
      - pki.millegrilles.ssl.fullchain
      - pki.millegrilles.web.fullchain
      - pki.millegrilles.web.key

  # Serveur de consignation pour fichiers
  consignationfichiers:
    image: ${REGISTRY}/consignationfichiers${CONSIGNATIONFICHIERS_IMAGE_VERSION}
    hostname: consignationfichiers.local
    volumes:
      - ${CONSIGNATIONFICHIERS_PATH}:/opt/millegrilles/consignation
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.consignationfichiers == true
      resources:
        limits:
          cpus: "0.50"
          memory: 50M
      restart_policy:
        condition: any
        delay: 30s
    environment:
     MG_NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
     CERT: /run/secrets/pki.millegrilles.ssl.cert
     PRIVKEY: /run/secrets/pki.millegrilles.ssl.key
    env_file:
      - services-coupdoeil.env
    networks:
      - mg_net
    secrets:
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.CAchain

  # ****************
  # Services publics
  # ****************

  # Web public avec nginx
  nginxpublic:
    image: ${REGISTRY}/mg_nginx${NGINX_IMAGE_VERSION}
    hostname: www.${URL_DOMAIN}
    volumes:
      # - ${NGINX_PUBLIC_CONF_PATH}:/etc/nginx/conf.d
      - ${NGINX_PUBLIC_WWW_PATH}:/usr/share/nginx/html
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.public == true
          - node.labels.millegrilles.nginx == true
      resources:
        limits:
          cpus: "0.50"
          memory: 100M
      restart_policy:
        condition: any
        delay: 30s
    environment:
     WEB_CERT: pki.millegrilles.web.fullchain
     WEB_KEY: pki.millegrilles.web.key
     NGINX_CONFIG_FILE: public.conf
     URL_DOMAIN: ${URL_DOMAIN}
     NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    networks:
      - mg_net
    secrets:
      - pki.millegrilles.web.fullchain
      - pki.millegrilles.web.cert
      - pki.millegrilles.web.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.CAchain

volumes:
  mg-middleware-rabbitmq-data:
    name: ${MQ_DATA_MAPPING}

secrets:
  mongo.root.password:
    external: true
    name: ${MONGO_ROOT_PASSWORD}
  mongoexpress.web.password:
    external: true
    name: ${MONGOEXPRESS_WEB_PASSWORD}
  pki.millegrilles.wadmin.cert:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_WADMIN_PREFIX}.fullchain.${PKI_MIDDLEWARE_WADMIN_VERSION}
  pki.millegrilles.wadmin.key:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_WADMIN_PREFIX}.key.${PKI_MIDDLEWARE_WADMIN_VERSION}
  pki.millegrilles.web.cert:
    external: true

    name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_WEB_PREFIX}.cert.${PKI_MIDDLEWARE_WEB_VERSION}
  # pki.millegrilles.web.chain:
  #   external: true
  #   name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_WEB_PREFIX}.chain.${PKI_MIDDLEWARE_WEB_VERSION}
  pki.millegrilles.web.fullchain:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_WEB_PREFIX}.fullchain.${PKI_MIDDLEWARE_WEB_VERSION}
  pki.millegrilles.web.key:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_WEB_PREFIX}.key.${PKI_MIDDLEWARE_WEB_VERSION}
  pki.millegrilles.ssl.key:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_SSL_PREFIX}.key.${PKI_MIDDLEWARE_SSL_VERSION}
  pki.millegrilles.ssl.cert:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_SSL_PREFIX}.cert.${PKI_MIDDLEWARE_SSL_VERSION}
  pki.millegrilles.ssl.fullchain:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_SSL_PREFIX}.fullchain.${PKI_MIDDLEWARE_SSL_VERSION}
  pki.millegrilles.ssl.key_cert:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.${PKI_MIDDLEWARE_SSL_PREFIX}.key_cert.${PKI_MIDDLEWARE_SSL_VERSION}
  pki.millegrilles.ssl.CAchain:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.${PKI_MILLEGRILLES_SSL_PREFIX}.CAchain.${PKI_MIDDLEWARE_SSL_VERSION}
  mg.transactions.json:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.mg.transactions.json.${CONFIGURATION_TRANSACTION_VERSION}
  mg.ceduleur.json:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.mg.ceduleur.json.${CONFIGURATION_CEDULEUR_VERSION}
  mg.mgdomaines.json:
    external: true
    name: ${MG_NOM_MILLEGRILLE}.mg.mgdomaines.json.${CONFIGURATION_MGDOMAINES_VERSION}

networks:
  mg_net:
    external: true
    name: mg_${NOM_MILLEGRILLE}_net
