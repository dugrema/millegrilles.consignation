# Stack pour consignation de MilleGrilles

# Use root/example as user/password credentials
version: '3.7'

services:

  # Script Python de persistance des transactions
  transactions-python:
    image: ${REGISTRY}/millegrilles_consignation_python${MG_PYTHON_IMAGE_VERSION}
    # entrypoint: /bin/sleep 1000
    hostname: transactions-python.${URL_DOMAIN}
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.python == true
          - node.labels.millegrilles.database == true
      resources:
       limits:
          cpus: "1.50"
          memory: 200M
      restart_policy:
        condition: any
        delay: 30s
    env_file:
      - services.env
    environment:
      MG_NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
      MG_CONFIG_JSON: /run/secrets/mg.transactions.json
      MG_MQ_USER: ${MG_MQ_USER_TRANSACTION}
      MG_MONGO_USERNAME: ${MG_MONGO_USER_TRANSACTION}
    networks:
      - mg_net
    secrets:
      - mg.transactions.json
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.key_cert
      - pki.millegrilles.ssl.CAchain

  # Ceduleur Python qui transmet un message a toutes les minutes
  ceduleur-python:
    image: ${REGISTRY}/millegrilles_consignation_python${MG_PYTHON_IMAGE_VERSION}
    hostname: ceduleur-python.${URL_DOMAIN}
    command: demarrer_ceduleur.py
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.python == true
      resources:
       limits:
          cpus: "0.20"
          memory: 50M
      restart_policy:
        condition: any
        delay: 30s
    env_file:
      - services.env
    environment:
      MG_NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
      MG_CONFIG_JSON: /run/secrets/mg.ceduleur.json
      MG_MQ_USER: ${MG_MQ_USER_CEDULE}
      MG_MONGO_USERNAME: ${MG_MONGO_USER_CEDULE}
    networks:
      - mg_net
    secrets:
      - mg.ceduleur.json
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.CAchain
      - pki.millegrilles.ssl.key_cert

  # Script Python pour executer les processus
  processus-python:
    image: ${REGISTRY}/millegrilles_consignation_python${MG_PYTHON_IMAGE_VERSION}
    hostname: processus-python.${URL_DOMAIN}
    command: demarrer_mgp.py
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.python == true
          - node.labels.millegrilles.mgp == true
      resources:
        limits:
          cpus: "1.00"
          memory: 100M
      restart_policy:
        condition: any
        delay: 30s
    env_file:
      - services.env
    environment:
      MG_NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
      MG_CONFIG_JSON: /run/secrets/mg.mgpprocessus.json
      MG_MQ_USER: ${MG_MQ_USER_MGPROCESSUS}
      MG_MONGO_USERNAME: ${MG_MONGO_USER_MGPROCESSUS}
      MG_EMAIL_HOST: ${MG_EMAIL_HOST}
      MG_EMAIL_PORT: ${MG_EMAIL_PORT}
      MG_EMAIL_USER: ${MG_EMAIL_USER}
      MG_EMAIL_PASSWORD: ${MG_EMAIL_PASSWORD}
      MG_EMAIL_FROM: ${MG_EMAIL_FROM}
      MG_EMAIL_TO: ${MG_EMAIL_TO}
    networks:
      - mg_net
    secrets:
      - mg.mgpprocessus.json
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.key_cert
      - pki.millegrilles.ssl.CAchain

  # Script Python pour executer les domaines
  domaines-python:
    image: ${REGISTRY}/millegrilles_consignation_python${MG_PYTHON_IMAGE_VERSION}
    command: demarrer_domaine.py --info
    hostname: domaines-python.${URL_DOMAIN}
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.netzone.private == true
          - node.labels.millegrilles.python == true
          - node.labels.millegrilles.domaines == true
      resources:
        limits:
          cpus: "1.00"
          memory: 100M
      restart_policy:
        condition: any
        delay: 30s
    env_file:
      - services.env
    environment:
      MG_NOM_MILLEGRILLE: ${MG_NOM_MILLEGRILLE}
      MG_CONFIG_JSON: /run/secrets/mg.mgdomaines.json
      MG_MQ_USER: ${MG_MQ_USER_DOMAINES}
      MG_MONGO_USERNAME: ${MG_MONGO_USER_DOMAINES}
      MG_DOMAINES_JSON: /opt/millegrilles/dist/domaines.json
    networks:
      - mg_net
    secrets:
      - mg.mgdomaines.json
      - pki.millegrilles.ssl.key
      - pki.millegrilles.ssl.cert
      - pki.millegrilles.ssl.key_cert
      - pki.millegrilles.ssl.CAchain

networks:
  mg_net:
    external: true
    name: mg_net

secrets:
  mg.transactions.json:
    external: true
    name: mg.transactions.json.${CONFIGURATION_TRANSACTION_VERSION}
  mg.ceduleur.json:
    external: true
    name: mg.ceduleur.json.${CONFIGURATION_CEDULEUR_VERSION}
  mg.mgpprocessus.json:
    external: true
    name: mg.mgpprocessus.json.${CONFIGURATION_MGPPROCESSUS_VERSION}
  mg.mgdomaines.json:
    external: true
    name: mg.mgdomaines.json.${CONFIGURATION_MGDOMAINES_VERSION}
  pki.millegrilles.ssl.key:
    external: true
    name: ${PKI_MILLEGRILLES_SSL_PREFIX}.key.${PKI_MILLEGRILLES_SSL_VERSION}
  pki.millegrilles.ssl.cert:
    external: true
    name: ${PKI_MILLEGRILLES_SSL_PREFIX}.cert.${PKI_MILLEGRILLES_SSL_VERSION}
  pki.millegrilles.ssl.key_cert:
    external: true
    name: ${PKI_MILLEGRILLES_SSL_PREFIX}.key_cert.${PKI_MILLEGRILLES_SSL_VERSION}
  pki.millegrilles.ssl.CAchain:
    external: true
    name: ${PKI_MILLEGRILLES_SSL_PREFIX}.CAchain.${PKI_MILLEGRILLES_SSL_VERSION}
